{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","components/Exchanges.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filterData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","console","log","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.117ae648.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (screenSize <= 800) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize]);\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptoverse</Link></Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '432c269fbdmsh7c72ae7eb72699fp1d21eejsnaaa62de14d34'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\n// var options = {\r\n//     method: 'GET',\r\n//     url: 'https://coinranking1.p.rapidapi.com/stats',\r\n//     headers: {\r\n//       'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n//       'x-rapidapi-key': '432c269fbdmsh7c72ae7eb72699fp1d21eejsnaaa62de14d34'\r\n//     }\r\n//   };\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    // the name of the hook, should have -use- and -Query- limiting the name of the webservice GET\r\n    useGetCryptosQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n    useGetExchangesQuery\r\n} = cryptoApi;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n    <div className=\"loader\">\r\n        <Spin />\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    // console.log(cryptos);\r\n\r\n    // useEffect is called whenever the component is rendered (at the start)\r\n    //useEffect to update the properties 'searchTerm' & 'cryptosList'\r\n    useEffect(() => {\r\n        const filterData = cryptosList?.data?.coins.filter((coin) => coin.name?.toLowerCase().includes(searchTerm?.toLowerCase()));\r\n        // using the useState to change dynamically the cryptos object before we map throu it\r\n        setCryptos(filterData);\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    if (isFetching) return <Loader />;\r\n    // gutter in antDesign Row is the spaces between the items left and right\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Cryptocurrency\"\r\n                        onChange={(e) => setSearchTerm(e.target.value)} />\r\n                </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card\r\n                                title={`${currency.rank}. ${currency.name}`}\r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\r\n                                hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Typography, Col, Row } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory?.data?.history[i].price);\r\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price In USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd',\r\n            },\r\n        ],\r\n    };\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">\r\n                        {coinHistory?.data?.change}%\r\n                    </Title>\r\n                    <Title level={5} className=\"current-price\">\r\n                        Current {coinName} Price : $ {currentPrice}\r\n                    </Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timeperiod, setTimeperiod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n                </Title>\r\n                <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n            </Col>\r\n            <Select defaultValue=\"7d\"\r\n                className=\"select-timeperiod\"\r\n                placeholder=\"Select Timeperiod\"\r\n                onChange={(value) => setTimeperiod(value)}\r\n            >\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n                        <p>An overview showing the statistics of all cryptocurrencies, such as the base and quote currency, the rank, and trading volume.</p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n                    {HTMLReactParser(cryptoDetails.description)}\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n                    {cryptoDetails.links.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">{link.type}</Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default CryptoDetails;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '432c269fbdmsh7c72ae7eb72699fp1d21eejsnaaa62de14d34'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Card, Select, Avatar, Typography, Row, Col } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nimport Loader from './Loader';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n    const { data } = useGetCryptosQuery(100);\r\n    const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\r\n    console.log(cryptoNews)\r\n    if (!cryptoNews?.value) return <Loader />;\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Crypto\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferre\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>\r\n                                    {news.name}\r\n                                </Title>\r\n                                <img style={{ maxWidth: '200px', maxHeight: '100px' }} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100\r\n                                    ? `${news.description.substring(0, 100)}...`\r\n                                    : news.description\r\n                                }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { Cryptocurrencies, News } from '../components';\r\n\r\nimport Loader from './Loader';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    // console.log(data);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n            <Row>\r\n                {/* Total spaces 'spans' is 24, mean 12 will take half the page */}\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n            </Row>\r\n            {/* Show 10 Cryptocurrencies using the variable simplified on the Cryptocurrencies Componenet */}\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n            {/* Show  Cryptocurrencies news using the variable simplified on the News Componenet */}\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/news\">Show more</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exchanges;","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\n\r\nimport { Navbar, Homepage, Exchanges, Cryptocurrencies, CryptoDetails, News } from './components';\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className=\"routes\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route exact path=\"/exchanges\">\r\n                                <Exchanges />\r\n                            </Route>\r\n                            <Route exact path=\"/cryptocurrencies\">\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path=\"/crypto/:coinId\">\r\n                                <CryptoDetails />\r\n                            </Route>\r\n                            <Route exact path=\"/news\">\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n\r\n                <div className=\"footer\">\r\n                    <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\r\n                        Cryptoverse <br />\r\n                        All rights reserved\r\n                    </Typography.Title>\r\n                    <Space>\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Space>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        {/* wrapping the entire app inside the Provider, so that all the app componenets have access to store variable */}\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}